name: Hotfix Deployment Workflow

on:
  issue_comment:
    types: [created, edited]

permissions:
  contents: 'read'
  issues: 'write' # PRのコメントに必要な権限
  pull-requests: 'write' # PRのコメントに必要な権限

jobs:
  deploy-command:
    if: |
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/hotfix')
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v2

      - name: PR コメントに返信
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ホットフィックスデプロイを開始しました。'
            })

      - name: 最新のリリースタグを取得
        id: get-latest-tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $latest_tag"
          echo "tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: タグが既に存在するか確認
        id: check_tag
        run: |
          if git tag --list | grep -q "${{ steps.get-latest-tag.outputs.tag }}"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT

      - name: タグが存在する場合コメント
        if: steps.check_tag.outputs.exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':warning: The tag ${{ steps.get-latest-tag.outputs.tag }} already exists. Please delete the tag and try again.'
            })

      - name: タグが存在しない場合、新しいタグを作成
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git tag "${{ steps.get-latest-tag.outputs.tag }}"
          git push origin "${{ steps.get-latest-tag.outputs.tag }}"
          echo "tag_created=true" >> $GITHUB_OUTPUT

      - name: PR コメントに返信
        if: steps.check_tag.outputs.exists == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'タグ ${{ steps.get-latest-tag.outputs.tag }} を作成しました。'
            })

