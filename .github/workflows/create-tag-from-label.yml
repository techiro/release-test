name: Create Tag from Label

on:
  pull_request:
    types: [ labeled ]

permissions:
  contents: write
  pull-requests: write

jobs:
  remove-label:
    if: github.event.label.name == 'create-tag' && (startsWith(github.head_ref, 'release-') || startsWith(github.head_ref, 'hotfix-'))
    runs-on: ubuntu-latest
    steps:

      - name: Remove label
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: context.payload.label.name
            })

  deploy-command:
    if: github.event.label.name == 'create-tag' && (startsWith(github.head_ref, 'release-') || startsWith(github.head_ref, 'hotfix-'))
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Dart
        uses: ./.github/actions/setup-dart

      - name: Get version from pubspec.yaml
        id: pubspec
        shell: bash
        run: |
          # git checkout HEAD pubspec.yaml
          # show git branch name
          echo $(git branch --show-current)
          dart pub global activate cider
          echo "version=$(cider version)" >> "$GITHUB_OUTPUT"

      - name: Generate token
        id: generate_app_tagger_token
        uses: actions/create-github-app-token@21cfef2b496dd8ef5b904c159339626a10ad380e # v1.11.6
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      # - name: Checkout repository with token
      #   uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      #   with:
      #     token: ${{ steps.generate_app_tagger_token.outputs.token }}

      - name: create release tag
        id: get-latest-tag
        run: |
          version="${{ steps.pubspec.outputs.version }}"
          if git tag --list | grep -q "$version"; then
            git tag -d "$version"
            git push origin --delete "$version"
          fi
          git tag "$version"
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git push origin "$version"
        env:
          GITHUB_TOKEN: ${{ steps.generate_app_tagger_token.outputs.token }}

      - name: Reply to PR comment
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '> [!IMPORTANT]\n> [Tag ${{ steps.pubspec.outputs.version }}](https://github.com/techiro/release-test/tags) has been created.'
            })
