name: Hotfix Workflow

on:
  workflow_dispatch:
    inputs:
      build_number:
        type: string
        required: true
        description: 'ビルドナンバーを指定'

jobs:
  create-hotfix-branch:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3

      - name: 直近のリリースタグを取得
        id: get-latest-tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $latest_tag"
          echo "::set-output name=tag::$latest_tag"

      # hotfixブランチのビルド番号を作成する　通常時、ビルド番号は最新のタグから+100を行う
      # 例: 1.2.3-100 -> 1.2.3-200
      - name: ビルド番号の作成
        run: |
          build_number=${{ github.event.inputs.build_number }}
          if [ -z "$build_number" ]; then
            build_number=$(echo ${{ steps.get-latest-tag.outputs.tag }} | sed -e 's/.*-//')
            build_number=$((build_number + 100))
          fi
          echo "Build number: $build_number"
          echo "::set-output name=build_number::$build_number"

  #     - name: hotfixブランチの作成
  #       run: |
  #         echo "Creating hotfix branch from tag: ${{ steps.get-latest-tag.outputs.tag }}"
  #         git checkout -b hotfix-${{ steps.get-latest-tag.outputs.tag }}
  #         git push origin hotfix-${{ steps.get-latest-tag.outputs.tag }}

  #     - name: pubspec.yamlのバージョン更新
  #       run: |
  #         echo "Updating version in pubspec.yaml"
  #         sed -i 's/version: \([0-9]*\.[0-9]*\.[0-9]*\)/version: \1+1/' pubspec.yaml
  #         git add pubspec.yaml
  #         git commit -m "Update patch version in pubspec.yaml"
  #         git push origin hotfix-${{ steps.get-latest-tag.outputs.tag }}

  #     - name: PRの作成
  #       uses: peter-evans/create-pull-request@v3
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         branch: hotfix-${{ steps.get-latest-tag.outputs.tag }}
  #         base: main
  #         title: "Hotfix: Update patch version"
  #         body: "This PR updates the patch version in pubspec.yaml."

  # create-fix-branch:
  #   runs-on: ubuntu-latest
  #   needs: create-hotfix-branch
  #   steps:
  #     - name: リポジトリのチェックアウト
  #       uses: actions/checkout@v3

  #     - name: 修正用ブランチの作成
  #       run: |
  #         echo "Creating fix branch"
  #         git checkout -b fix-${{ github.sha }}
  #         git push origin fix-${{ github.sha }}

  #     - name: PRの作成
  #       uses: peter-evans/create-pull-request@v3
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         branch: fix-${{ github.sha }}
  #         base: hotfix-${{ steps.get-latest-tag.outputs.tag }}
  #         title: "Fix: Apply hotfix changes"
  #         body: "This PR applies the necessary hotfix changes."

  # tag-and-release:
  #   runs-on: ubuntu-latest
  #   needs: create-fix-branch
  #   steps:
  #     - name: リポジトリのチェックアウト
  #       uses: actions/checkout@v3

  #     - name: タグの作成
  #       run: |
  #         echo "Creating tag for release"
  #         git tag -a v${{ steps.get-latest-tag.outputs.tag }} -m "Hotfix release"
  #         git push origin v${{ steps.get-latest-tag.outputs.tag }}

  #     - name: リリースの作成
  #       uses: actions/create-release@v1
  #       with:
  #         tag_name: v${{ steps.get-latest-tag.outputs.tag }}
  #         release_name: "Hotfix Release"
  #         body: "This is a hotfix release."
  #         draft: false
  #         prerelease: false
