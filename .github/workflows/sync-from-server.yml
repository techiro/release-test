name: Sync Changes from Server Repository

on:
  repository_dispatch:
    types: [server-release-updated]

jobs:
  sync-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      
      - name: Print event information
        run: |
          echo "Event received from: ${{ github.event.client_payload.repository || 'techiro/release-test-server' }}"
          echo "Ref: ${{ github.event.client_payload.ref || 'main' }}"
          echo "Commit SHA: ${{ github.event.client_payload.sha || 'N/A' }}"
          echo "Message: ${{ github.event.client_payload.message || 'No message provided' }}"
      
      - name: Checkout server repository
        uses: actions/checkout@v4.2.2
        with:
          repository: techiro/release-test-server
          ref: ${{ github.event.client_payload.ref || 'main' }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: server
          
      - name: Copy changes from server repository
        run: |
          echo "Copying changes from server repository"
          # Define the files/directories you want to sync
          # Example: cp -r ./server/src/* ./src/
          # This will depend on the specific files you want to sync
          
          # For demonstration, we'll copy a specific file if it exists
          if [ -f "./server/changes.md" ]; then
            cp ./server/changes.md ./changes.md
          fi
          
      - name: Commit and push changes
        run: |
          echo "Checking for changes to commit"
          if git diff --exit-code; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Get commit message from event payload or use default
          COMMIT_MSG="${{ github.event.client_payload.message || 'Sync changes from release-test-server' }} [skip ci]"
          
          echo "Committing changes"
          git add .
          git commit -m "$COMMIT_MSG"
          
          echo "Pushing changes"
          git push